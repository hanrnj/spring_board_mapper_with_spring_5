1.트랜잭션의 의미: 어떤 일련의 작업의 의미임(한번에 이루어져야 하는 작업단위)
2.모두 에러 없이 끝나야하며, 만약 중간에 에러가 발생 한다면, 애러 발생 이전 시점까지 작업되었던 내용은 모두 원상복구 되어야 함.
3.트랜잭션은 500(코딩에러) 및  404(페이지x), 403(권한) 등의 에러처리가 아니면, 애러 발생시 DB로 하여금 원상복구하도록 DB에 요청하는것임.
4.가장 대표적인 예는 계좌이체 오류없이 완벽하게 이루어 져야 함.
정전이 일어 난다면?
insert,delete,update ==> commit을 무조건 시켜줘야함

Transaction 설정방법
1)spring context 설정파일에서 Transaction 선언
2)spring Transaction Annotation을 사용한  Transaction 선언(이거 많이사용함)
3)spring API를 사요하여 프로그램 소스 상에 Transaction구현

1), 2) 는 spring AOP를 사용하는것이고, 3)은 AOP가 아닌 순수 spring API를 사용하는 방법

트랜잭션 우선순위는 메소드 > 클래스 > 인터페이스 메소드 > 인터페이스순

@Transactional붙이는 곳은 비지니스로직(service)가 실행되는 부분이다.


==================================================================
-선언적 트랜잭션에서는 런타임 예외가 발생하면 롤백한다.
-반면에 예외가 전혀 발생하지 않거나 체크 예외가 발생하면 커밋한다(롤백하지 않는다).

컴파일에러(checked error)에 대해서는
@Transactional(rollbackFor = Exception.class)를 통해서 예외처리를 해준다.